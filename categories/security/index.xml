<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on blog</title><link>/categories/security/</link><description>Recent content in Security on blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Â© dima 2018</copyright><lastBuildDate>Wed, 07 Aug 2024 10:52:58 +0200</lastBuildDate><atom:link href="/categories/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Track a website by diff and get notification</title><link>/post/2024-08-07-track-website/</link><pubDate>Wed, 07 Aug 2024 10:52:58 +0200</pubDate><guid>/post/2024-08-07-track-website/</guid><description>Some day, I needed to keep track of my daughter&amp;rsquo;s schools wordPress page about news. As a software developer, I didn&amp;rsquo;t want to check the website every day, so I decided to use a third-party service like Telegram to get notified whenever there were new updates.
My idea was to fetch the entire page&amp;rsquo;s content and transform it into Markdown format, removing all HTML tags to leave only the readable content.</description></item><item><title>Yubikey - rule them all</title><link>/post/2024-06-16-yubikey-configuration/</link><pubDate>Tue, 18 Jun 2024 00:00:00 +0000</pubDate><guid>/post/2024-06-16-yubikey-configuration/</guid><description>Finally I have one(two cause of backup) Yubikey 5 NFC and FINALLY I took the time to dig deeper into private security.
Here I will provide long story short summary about my learnings and a quick howto.
Download tails image to USB and boot it Create secure passphrase with this commands, or with helper like passphrase.html or passphrase.csv after print lp -d Printer-Name passphrase.csv or with Dicewire CERTIFY_PASS=$(LC_ALL=C tr -dc &amp;#39;A-Z1-9&amp;#39; &amp;lt; /dev/urandom | \ tr -d &amp;#34;1IOS5U&amp;#34; | fold -w 30 | sed &amp;#34;-es/.</description></item><item><title>Create a perfect pgp key</title><link>/post/2018-06-12-create-a-perfect-pgp-key/</link><pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate><guid>/post/2018-06-12-create-a-perfect-pgp-key/</guid><description>Maybe I already said that I&amp;rsquo;m a big fan of pass. A small unix tool (bash-script) for managing passwords with a pgp-key. In this note I collected some introductions for a best practise.
The goals in this post are create a pgp master key with multiple id and a subkey.
GPG config At first, some gpg config stuff here. [1]
Update your ~/.gnupg/gpg.conf and kill your actually running gpg-agent killall gpg-agent</description></item></channel></rss>