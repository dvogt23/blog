<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on blog</title><link>/tags/java/</link><description>Recent content in java on blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Â© dima 2018</copyright><lastBuildDate>Mon, 02 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Wildfly LDAP integration</title><link>/post/2018-01-08-wildfly-ldap-intergration/</link><pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate><guid>/post/2018-01-08-wildfly-ldap-intergration/</guid><description>In the past, I spent a lot of time to figuring out, how to add the integrated LDAP module of the wildfly server. To do this, you have to take changes in some different places:
Wildfly server side Add &amp;lsquo;LDAPExtended&amp;rsquo; module in wildfly configuration In the first place you have to add a module to your server configuration. Do it like this: Wildfly admin console: Configuration -&amp;gt; Subsystems -&amp;gt; Security -&amp;gt; [Add] Name: &amp;quot;LDAPAuth&amp;quot; this name will be connected in the jboss-web.</description></item><item><title>Wildfly DLL as extension</title><link>/post/2018-01-22-wildfly-dll-as-extension/</link><pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate><guid>/post/2018-01-22-wildfly-dll-as-extension/</guid><description>A very difficult part of a wildfly instance is to use some DLL-files in your different java projects as dependency. If you choose the easy way and include the dll binary in your executable path of your wildfly instance, your war project will crash after an another project try to use the same dll binary. After that cognition you have to go the &amp;ldquo;hard&amp;rdquo; way. In this post you are on the right path&amp;hellip;</description></item></channel></rss>